Terminals which are not used

   CHAR_PTR
   INT_PTR
   VOID_PTR


Grammar

    0 $accept: program $end

    1 program: translation_unit

    2 translation_unit: external_declaration
    3                 | translation_unit external_declaration

    4 external_declaration: function_definition
    5                     | function_declaration
    6                     | variable_declaration SEMICOLON

    7 variable_declaration: type_specifier identifier
    8                     | type_specifier identifier ASSIGN expression
    9                     | type_specifier identifier LBRACKET CONSTANT RBRACKET

   10 function_declaration: EXTERN type_specifier identifier LPAREN func_decl_arguments RPAREN SEMICOLON

   11 function_definition: type_specifier identifier LPAREN func_decl_arguments RPAREN compound_statement

   12 func_decl_arguments: /* empty */
   13                    | variable_declaration
   14                    | func_decl_arguments COMMA variable_declaration

   15 argument_expression_list: /* empty */
   16                         | expression
   17                         | argument_expression_list COMMA expression

   18 primary_expression: identifier
   19                   | CONSTANT
   20                   | CHAR_CONSTANT
   21                   | STRING_LITERAL
   22                   | LPAREN expression RPAREN

   23 postfix_expression: primary_expression
   24                   | identifier LBRACKET expression RBRACKET
   25                   | identifier LPAREN argument_expression_list RPAREN

   26 unary_expression: postfix_expression
   27                 | unary_operator unary_expression

   28 unary_operator: PLUS
   29               | MINUS
   30               | BIT_INVERSION
   31               | BIT_NOT

   32 multiplicative_expression: unary_expression
   33                          | multiplicative_expression MUL unary_expression
   34                          | multiplicative_expression DIV unary_expression
   35                          | multiplicative_expression MOD unary_expression

   36 additive_expression: multiplicative_expression
   37                    | additive_expression PLUS multiplicative_expression
   38                    | additive_expression MINUS multiplicative_expression

   39 shift_expression: additive_expression
   40                 | shift_expression LEFT_SHIFT additive_expression
   41                 | shift_expression RIGHT_SHIFT additive_expression

   42 relational_expression: shift_expression
   43                      | relational_expression COM_L shift_expression
   44                      | relational_expression COM_G shift_expression
   45                      | relational_expression COM_LE shift_expression
   46                      | relational_expression COM_GE shift_expression

   47 equality_expression: relational_expression
   48                    | equality_expression COM_EQ relational_expression
   49                    | equality_expression COM_NE relational_expression

   50 and_expression: equality_expression
   51               | and_expression BIT_AND equality_expression

   52 exclusive_or_expression: and_expression
   53                        | exclusive_or_expression BIT_XOR and_expression

   54 inclusive_or_expression: exclusive_or_expression
   55                        | inclusive_or_expression BIT_OR exclusive_or_expression

   56 logical_and_expression: inclusive_or_expression
   57                       | logical_and_expression LOGIC_AND inclusive_or_expression

   58 logical_or_expression: logical_and_expression
   59                      | logical_or_expression LOGIC_OR logical_and_expression

   60 expression: logical_or_expression
   61           | identifier ASSIGN expression

   62 type_specifier: VOID
   63               | CHAR
   64               | INT
   65               | VOID MUL
   66               | CHAR MUL
   67               | INT MUL

   68 identifier: IDENTIFIER

   69 statement: compound_statement
   70          | expression_statement
   71          | selection_statement
   72          | iteration_statement
   73          | jump_statement

   74 compound_statement: LBRACE RBRACE
   75                   | LBRACE statement_list RBRACE
   76                   | LBRACE declaration_list RBRACE
   77                   | LBRACE declaration_list statement_list RBRACE

   78 declaration_list: variable_declaration SEMICOLON
   79                 | declaration_list variable_declaration SEMICOLON

   80 statement_list: statement
   81               | statement_list statement

   82 expression_statement: SEMICOLON
   83                     | expression SEMICOLON

   84 selection_statement: IF LPAREN expression RPAREN statement
   85                    | IF LPAREN expression RPAREN statement ELSE statement

   86 iteration_statement: WHILE LPAREN expression RPAREN statement
   87                    | FOR LPAREN expression SEMICOLON expression SEMICOLON RPAREN statement
   88                    | FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement

   89 jump_statement: CONTINUE SEMICOLON
   90               | BREAK SEMICOLON
   91               | RETURN SEMICOLON
   92               | RETURN expression SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 68
CONSTANT (259) 9 19
CHAR_CONSTANT (260) 20
STRING_LITERAL (261) 21
CHAR (262) 63 66
INT (263) 64 67
VOID (264) 62 65
EXTERN (265) 10
CHAR_PTR (266)
INT_PTR (267)
VOID_PTR (268)
IF (269) 84 85
ELSE (270) 85
FOR (271) 87 88
WHILE (272) 86
CONTINUE (273) 89
BREAK (274) 90
RETURN (275) 91 92
RIGHT_SHIFT (276) 41
LEFT_SHIFT (277) 40
LOGIC_AND (278) 57
LOGIC_OR (279) 59
COM_LE (280) 45
COM_GE (281) 46
COM_EQ (282) 48
COM_NE (283) 49
SEMICOLON (284) 6 10 78 79 82 83 87 88 89 90 91 92
LBRACE (285) 74 75 76 77
RBRACE (286) 74 75 76 77
COMMA (287) 14 17
ASSIGN (288) 8 61
LPAREN (289) 10 11 22 25 84 85 86 87 88
RPAREN (290) 10 11 22 25 84 85 86 87 88
LBRACKET (291) 9 24
RBRACKET (292) 9 24
BIT_AND (293) 51
BIT_XOR (294) 53
BIT_OR (295) 55
BIT_NOT (296) 31
BIT_INVERSION (297) 30
MINUS (298) 29 38
PLUS (299) 28 37
MUL (300) 33 65 66 67
DIV (301) 34
MOD (302) 35
COM_L (303) 43
COM_G (304) 44
LOWER_THAN_ELSE (305)


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1, on right: 0
translation_unit (53)
    on left: 2 3, on right: 1 3
external_declaration (54)
    on left: 4 5 6, on right: 2 3
variable_declaration (55)
    on left: 7 8 9, on right: 6 13 14 78 79
function_declaration (56)
    on left: 10, on right: 5
function_definition (57)
    on left: 11, on right: 4
func_decl_arguments (58)
    on left: 12 13 14, on right: 10 11 14
argument_expression_list (59)
    on left: 15 16 17, on right: 17 25
primary_expression (60)
    on left: 18 19 20 21 22, on right: 23
postfix_expression (61)
    on left: 23 24 25, on right: 26
unary_expression (62)
    on left: 26 27, on right: 27 32 33 34 35
unary_operator (63)
    on left: 28 29 30 31, on right: 27
multiplicative_expression (64)
    on left: 32 33 34 35, on right: 33 34 35 36 37 38
additive_expression (65)
    on left: 36 37 38, on right: 37 38 39 40 41
shift_expression (66)
    on left: 39 40 41, on right: 40 41 42 43 44 45 46
relational_expression (67)
    on left: 42 43 44 45 46, on right: 43 44 45 46 47 48 49
equality_expression (68)
    on left: 47 48 49, on right: 48 49 50 51
and_expression (69)
    on left: 50 51, on right: 51 52 53
exclusive_or_expression (70)
    on left: 52 53, on right: 53 54 55
inclusive_or_expression (71)
    on left: 54 55, on right: 55 56 57
logical_and_expression (72)
    on left: 56 57, on right: 57 58 59
logical_or_expression (73)
    on left: 58 59, on right: 59 60
expression (74)
    on left: 60 61, on right: 8 16 17 22 24 61 83 84 85 86 87 88 92
type_specifier (75)
    on left: 62 63 64 65 66 67, on right: 7 8 9 10 11
identifier (76)
    on left: 68, on right: 7 8 9 10 11 18 24 25 61
statement (77)
    on left: 69 70 71 72 73, on right: 80 81 84 85 86 87 88
compound_statement (78)
    on left: 74 75 76 77, on right: 11 69
declaration_list (79)
    on left: 78 79, on right: 76 77 79
statement_list (80)
    on left: 80 81, on right: 75 77 81
expression_statement (81)
    on left: 82 83, on right: 70
selection_statement (82)
    on left: 84 85, on right: 71
iteration_statement (83)
    on left: 86 87 88, on right: 72
jump_statement (84)
    on left: 89 90 91 92, on right: 73


state 0

    0 $accept: . program $end

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    VOID    shift, and go to state 3
    EXTERN  shift, and go to state 4

    program               go to state 5
    translation_unit      go to state 6
    external_declaration  go to state 7
    variable_declaration  go to state 8
    function_declaration  go to state 9
    function_definition   go to state 10
    type_specifier        go to state 11


state 1

   63 type_specifier: CHAR .
   66               | CHAR . MUL

    MUL  shift, and go to state 12

    $default  reduce using rule 63 (type_specifier)


state 2

   64 type_specifier: INT .
   67               | INT . MUL

    MUL  shift, and go to state 13

    $default  reduce using rule 64 (type_specifier)


state 3

   62 type_specifier: VOID .
   65               | VOID . MUL

    MUL  shift, and go to state 14

    $default  reduce using rule 62 (type_specifier)


state 4

   10 function_declaration: EXTERN . type_specifier identifier LPAREN func_decl_arguments RPAREN SEMICOLON

    CHAR  shift, and go to state 1
    INT   shift, and go to state 2
    VOID  shift, and go to state 3

    type_specifier  go to state 15


state 5

    0 $accept: program . $end

    $end  shift, and go to state 16


state 6

    1 program: translation_unit .
    3 translation_unit: translation_unit . external_declaration

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    VOID    shift, and go to state 3
    EXTERN  shift, and go to state 4

    $default  reduce using rule 1 (program)

    external_declaration  go to state 17
    variable_declaration  go to state 8
    function_declaration  go to state 9
    function_definition   go to state 10
    type_specifier        go to state 11


state 7

    2 translation_unit: external_declaration .

    $default  reduce using rule 2 (translation_unit)


state 8

    6 external_declaration: variable_declaration . SEMICOLON

    SEMICOLON  shift, and go to state 18


state 9

    5 external_declaration: function_declaration .

    $default  reduce using rule 5 (external_declaration)


state 10

    4 external_declaration: function_definition .

    $default  reduce using rule 4 (external_declaration)


state 11

    7 variable_declaration: type_specifier . identifier
    8                     | type_specifier . identifier ASSIGN expression
    9                     | type_specifier . identifier LBRACKET CONSTANT RBRACKET
   11 function_definition: type_specifier . identifier LPAREN func_decl_arguments RPAREN compound_statement

    IDENTIFIER  shift, and go to state 19

    identifier  go to state 20


state 12

   66 type_specifier: CHAR MUL .

    $default  reduce using rule 66 (type_specifier)


state 13

   67 type_specifier: INT MUL .

    $default  reduce using rule 67 (type_specifier)


state 14

   65 type_specifier: VOID MUL .

    $default  reduce using rule 65 (type_specifier)


state 15

   10 function_declaration: EXTERN type_specifier . identifier LPAREN func_decl_arguments RPAREN SEMICOLON

    IDENTIFIER  shift, and go to state 19

    identifier  go to state 21


state 16

    0 $accept: program $end .

    $default  accept


state 17

    3 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 3 (translation_unit)


state 18

    6 external_declaration: variable_declaration SEMICOLON .

    $default  reduce using rule 6 (external_declaration)


state 19

   68 identifier: IDENTIFIER .

    $default  reduce using rule 68 (identifier)


state 20

    7 variable_declaration: type_specifier identifier .
    8                     | type_specifier identifier . ASSIGN expression
    9                     | type_specifier identifier . LBRACKET CONSTANT RBRACKET
   11 function_definition: type_specifier identifier . LPAREN func_decl_arguments RPAREN compound_statement

    ASSIGN    shift, and go to state 22
    LPAREN    shift, and go to state 23
    LBRACKET  shift, and go to state 24

    $default  reduce using rule 7 (variable_declaration)


state 21

   10 function_declaration: EXTERN type_specifier identifier . LPAREN func_decl_arguments RPAREN SEMICOLON

    LPAREN  shift, and go to state 25


state 22

    8 variable_declaration: type_specifier identifier ASSIGN . expression

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    exclusive_or_expression    go to state 44
    inclusive_or_expression    go to state 45
    logical_and_expression     go to state 46
    logical_or_expression      go to state 47
    expression                 go to state 48
    identifier                 go to state 49


state 23

   11 function_definition: type_specifier identifier LPAREN . func_decl_arguments RPAREN compound_statement

    CHAR  shift, and go to state 1
    INT   shift, and go to state 2
    VOID  shift, and go to state 3

    $default  reduce using rule 12 (func_decl_arguments)

    variable_declaration  go to state 50
    func_decl_arguments   go to state 51
    type_specifier        go to state 52


state 24

    9 variable_declaration: type_specifier identifier LBRACKET . CONSTANT RBRACKET

    CONSTANT  shift, and go to state 53


state 25

   10 function_declaration: EXTERN type_specifier identifier LPAREN . func_decl_arguments RPAREN SEMICOLON

    CHAR  shift, and go to state 1
    INT   shift, and go to state 2
    VOID  shift, and go to state 3

    $default  reduce using rule 12 (func_decl_arguments)

    variable_declaration  go to state 50
    func_decl_arguments   go to state 54
    type_specifier        go to state 52


state 26

   19 primary_expression: CONSTANT .

    $default  reduce using rule 19 (primary_expression)


state 27

   20 primary_expression: CHAR_CONSTANT .

    $default  reduce using rule 20 (primary_expression)


state 28

   21 primary_expression: STRING_LITERAL .

    $default  reduce using rule 21 (primary_expression)


state 29

   22 primary_expression: LPAREN . expression RPAREN

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    exclusive_or_expression    go to state 44
    inclusive_or_expression    go to state 45
    logical_and_expression     go to state 46
    logical_or_expression      go to state 47
    expression                 go to state 55
    identifier                 go to state 49


state 30

   31 unary_operator: BIT_NOT .

    $default  reduce using rule 31 (unary_operator)


state 31

   30 unary_operator: BIT_INVERSION .

    $default  reduce using rule 30 (unary_operator)


state 32

   29 unary_operator: MINUS .

    $default  reduce using rule 29 (unary_operator)


state 33

   28 unary_operator: PLUS .

    $default  reduce using rule 28 (unary_operator)


state 34

   23 postfix_expression: primary_expression .

    $default  reduce using rule 23 (postfix_expression)


state 35

   26 unary_expression: postfix_expression .

    $default  reduce using rule 26 (unary_expression)


state 36

   32 multiplicative_expression: unary_expression .

    $default  reduce using rule 32 (multiplicative_expression)


state 37

   27 unary_expression: unary_operator . unary_expression

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression  go to state 34
    postfix_expression  go to state 35
    unary_expression    go to state 56
    unary_operator      go to state 37
    identifier          go to state 57


state 38

   33 multiplicative_expression: multiplicative_expression . MUL unary_expression
   34                          | multiplicative_expression . DIV unary_expression
   35                          | multiplicative_expression . MOD unary_expression
   36 additive_expression: multiplicative_expression .

    MUL  shift, and go to state 58
    DIV  shift, and go to state 59
    MOD  shift, and go to state 60

    $default  reduce using rule 36 (additive_expression)


state 39

   37 additive_expression: additive_expression . PLUS multiplicative_expression
   38                    | additive_expression . MINUS multiplicative_expression
   39 shift_expression: additive_expression .

    MINUS  shift, and go to state 61
    PLUS   shift, and go to state 62

    $default  reduce using rule 39 (shift_expression)


state 40

   40 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   41                 | shift_expression . RIGHT_SHIFT additive_expression
   42 relational_expression: shift_expression .

    RIGHT_SHIFT  shift, and go to state 63
    LEFT_SHIFT   shift, and go to state 64

    $default  reduce using rule 42 (relational_expression)


state 41

   43 relational_expression: relational_expression . COM_L shift_expression
   44                      | relational_expression . COM_G shift_expression
   45                      | relational_expression . COM_LE shift_expression
   46                      | relational_expression . COM_GE shift_expression
   47 equality_expression: relational_expression .

    COM_LE  shift, and go to state 65
    COM_GE  shift, and go to state 66
    COM_L   shift, and go to state 67
    COM_G   shift, and go to state 68

    $default  reduce using rule 47 (equality_expression)


state 42

   48 equality_expression: equality_expression . COM_EQ relational_expression
   49                    | equality_expression . COM_NE relational_expression
   50 and_expression: equality_expression .

    COM_EQ  shift, and go to state 69
    COM_NE  shift, and go to state 70

    $default  reduce using rule 50 (and_expression)


state 43

   51 and_expression: and_expression . BIT_AND equality_expression
   52 exclusive_or_expression: and_expression .

    BIT_AND  shift, and go to state 71

    $default  reduce using rule 52 (exclusive_or_expression)


state 44

   53 exclusive_or_expression: exclusive_or_expression . BIT_XOR and_expression
   54 inclusive_or_expression: exclusive_or_expression .

    BIT_XOR  shift, and go to state 72

    $default  reduce using rule 54 (inclusive_or_expression)


state 45

   55 inclusive_or_expression: inclusive_or_expression . BIT_OR exclusive_or_expression
   56 logical_and_expression: inclusive_or_expression .

    BIT_OR  shift, and go to state 73

    $default  reduce using rule 56 (logical_and_expression)


state 46

   57 logical_and_expression: logical_and_expression . LOGIC_AND inclusive_or_expression
   58 logical_or_expression: logical_and_expression .

    LOGIC_AND  shift, and go to state 74

    $default  reduce using rule 58 (logical_or_expression)


state 47

   59 logical_or_expression: logical_or_expression . LOGIC_OR logical_and_expression
   60 expression: logical_or_expression .

    LOGIC_OR  shift, and go to state 75

    $default  reduce using rule 60 (expression)


state 48

    8 variable_declaration: type_specifier identifier ASSIGN expression .

    $default  reduce using rule 8 (variable_declaration)


state 49

   18 primary_expression: identifier .
   24 postfix_expression: identifier . LBRACKET expression RBRACKET
   25                   | identifier . LPAREN argument_expression_list RPAREN
   61 expression: identifier . ASSIGN expression

    ASSIGN    shift, and go to state 76
    LPAREN    shift, and go to state 77
    LBRACKET  shift, and go to state 78

    $default  reduce using rule 18 (primary_expression)


state 50

   13 func_decl_arguments: variable_declaration .

    $default  reduce using rule 13 (func_decl_arguments)


state 51

   11 function_definition: type_specifier identifier LPAREN func_decl_arguments . RPAREN compound_statement
   14 func_decl_arguments: func_decl_arguments . COMMA variable_declaration

    COMMA   shift, and go to state 79
    RPAREN  shift, and go to state 80


state 52

    7 variable_declaration: type_specifier . identifier
    8                     | type_specifier . identifier ASSIGN expression
    9                     | type_specifier . identifier LBRACKET CONSTANT RBRACKET

    IDENTIFIER  shift, and go to state 19

    identifier  go to state 81


state 53

    9 variable_declaration: type_specifier identifier LBRACKET CONSTANT . RBRACKET

    RBRACKET  shift, and go to state 82


state 54

   10 function_declaration: EXTERN type_specifier identifier LPAREN func_decl_arguments . RPAREN SEMICOLON
   14 func_decl_arguments: func_decl_arguments . COMMA variable_declaration

    COMMA   shift, and go to state 79
    RPAREN  shift, and go to state 83


state 55

   22 primary_expression: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 84


state 56

   27 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 27 (unary_expression)


state 57

   18 primary_expression: identifier .
   24 postfix_expression: identifier . LBRACKET expression RBRACKET
   25                   | identifier . LPAREN argument_expression_list RPAREN

    LPAREN    shift, and go to state 77
    LBRACKET  shift, and go to state 78

    $default  reduce using rule 18 (primary_expression)


state 58

   33 multiplicative_expression: multiplicative_expression MUL . unary_expression

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression  go to state 34
    postfix_expression  go to state 35
    unary_expression    go to state 85
    unary_operator      go to state 37
    identifier          go to state 57


state 59

   34 multiplicative_expression: multiplicative_expression DIV . unary_expression

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression  go to state 34
    postfix_expression  go to state 35
    unary_expression    go to state 86
    unary_operator      go to state 37
    identifier          go to state 57


state 60

   35 multiplicative_expression: multiplicative_expression MOD . unary_expression

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression  go to state 34
    postfix_expression  go to state 35
    unary_expression    go to state 87
    unary_operator      go to state 37
    identifier          go to state 57


state 61

   38 additive_expression: additive_expression MINUS . multiplicative_expression

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 88
    identifier                 go to state 57


state 62

   37 additive_expression: additive_expression PLUS . multiplicative_expression

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 89
    identifier                 go to state 57


state 63

   41 shift_expression: shift_expression RIGHT_SHIFT . additive_expression

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 90
    identifier                 go to state 57


state 64

   40 shift_expression: shift_expression LEFT_SHIFT . additive_expression

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 91
    identifier                 go to state 57


state 65

   45 relational_expression: relational_expression COM_LE . shift_expression

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 92
    identifier                 go to state 57


state 66

   46 relational_expression: relational_expression COM_GE . shift_expression

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 93
    identifier                 go to state 57


state 67

   43 relational_expression: relational_expression COM_L . shift_expression

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 94
    identifier                 go to state 57


state 68

   44 relational_expression: relational_expression COM_G . shift_expression

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 95
    identifier                 go to state 57


state 69

   48 equality_expression: equality_expression COM_EQ . relational_expression

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 96
    identifier                 go to state 57


state 70

   49 equality_expression: equality_expression COM_NE . relational_expression

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 97
    identifier                 go to state 57


state 71

   51 and_expression: and_expression BIT_AND . equality_expression

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 98
    identifier                 go to state 57


state 72

   53 exclusive_or_expression: exclusive_or_expression BIT_XOR . and_expression

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 99
    identifier                 go to state 57


state 73

   55 inclusive_or_expression: inclusive_or_expression BIT_OR . exclusive_or_expression

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    exclusive_or_expression    go to state 100
    identifier                 go to state 57


state 74

   57 logical_and_expression: logical_and_expression LOGIC_AND . inclusive_or_expression

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    exclusive_or_expression    go to state 44
    inclusive_or_expression    go to state 101
    identifier                 go to state 57


state 75

   59 logical_or_expression: logical_or_expression LOGIC_OR . logical_and_expression

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    exclusive_or_expression    go to state 44
    inclusive_or_expression    go to state 45
    logical_and_expression     go to state 102
    identifier                 go to state 57


state 76

   61 expression: identifier ASSIGN . expression

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    exclusive_or_expression    go to state 44
    inclusive_or_expression    go to state 45
    logical_and_expression     go to state 46
    logical_or_expression      go to state 47
    expression                 go to state 103
    identifier                 go to state 49


state 77

   25 postfix_expression: identifier LPAREN . argument_expression_list RPAREN

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    $default  reduce using rule 15 (argument_expression_list)

    argument_expression_list   go to state 104
    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    exclusive_or_expression    go to state 44
    inclusive_or_expression    go to state 45
    logical_and_expression     go to state 46
    logical_or_expression      go to state 47
    expression                 go to state 105
    identifier                 go to state 49


state 78

   24 postfix_expression: identifier LBRACKET . expression RBRACKET

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    exclusive_or_expression    go to state 44
    inclusive_or_expression    go to state 45
    logical_and_expression     go to state 46
    logical_or_expression      go to state 47
    expression                 go to state 106
    identifier                 go to state 49


state 79

   14 func_decl_arguments: func_decl_arguments COMMA . variable_declaration

    CHAR  shift, and go to state 1
    INT   shift, and go to state 2
    VOID  shift, and go to state 3

    variable_declaration  go to state 107
    type_specifier        go to state 52


state 80

   11 function_definition: type_specifier identifier LPAREN func_decl_arguments RPAREN . compound_statement

    LBRACE  shift, and go to state 108

    compound_statement  go to state 109


state 81

    7 variable_declaration: type_specifier identifier .
    8                     | type_specifier identifier . ASSIGN expression
    9                     | type_specifier identifier . LBRACKET CONSTANT RBRACKET

    ASSIGN    shift, and go to state 22
    LBRACKET  shift, and go to state 24

    $default  reduce using rule 7 (variable_declaration)


state 82

    9 variable_declaration: type_specifier identifier LBRACKET CONSTANT RBRACKET .

    $default  reduce using rule 9 (variable_declaration)


state 83

   10 function_declaration: EXTERN type_specifier identifier LPAREN func_decl_arguments RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 110


state 84

   22 primary_expression: LPAREN expression RPAREN .

    $default  reduce using rule 22 (primary_expression)


state 85

   33 multiplicative_expression: multiplicative_expression MUL unary_expression .

    $default  reduce using rule 33 (multiplicative_expression)


state 86

   34 multiplicative_expression: multiplicative_expression DIV unary_expression .

    $default  reduce using rule 34 (multiplicative_expression)


state 87

   35 multiplicative_expression: multiplicative_expression MOD unary_expression .

    $default  reduce using rule 35 (multiplicative_expression)


state 88

   33 multiplicative_expression: multiplicative_expression . MUL unary_expression
   34                          | multiplicative_expression . DIV unary_expression
   35                          | multiplicative_expression . MOD unary_expression
   38 additive_expression: additive_expression MINUS multiplicative_expression .

    MUL  shift, and go to state 58
    DIV  shift, and go to state 59
    MOD  shift, and go to state 60

    $default  reduce using rule 38 (additive_expression)


state 89

   33 multiplicative_expression: multiplicative_expression . MUL unary_expression
   34                          | multiplicative_expression . DIV unary_expression
   35                          | multiplicative_expression . MOD unary_expression
   37 additive_expression: additive_expression PLUS multiplicative_expression .

    MUL  shift, and go to state 58
    DIV  shift, and go to state 59
    MOD  shift, and go to state 60

    $default  reduce using rule 37 (additive_expression)


state 90

   37 additive_expression: additive_expression . PLUS multiplicative_expression
   38                    | additive_expression . MINUS multiplicative_expression
   41 shift_expression: shift_expression RIGHT_SHIFT additive_expression .

    MINUS  shift, and go to state 61
    PLUS   shift, and go to state 62

    $default  reduce using rule 41 (shift_expression)


state 91

   37 additive_expression: additive_expression . PLUS multiplicative_expression
   38                    | additive_expression . MINUS multiplicative_expression
   40 shift_expression: shift_expression LEFT_SHIFT additive_expression .

    MINUS  shift, and go to state 61
    PLUS   shift, and go to state 62

    $default  reduce using rule 40 (shift_expression)


state 92

   40 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   41                 | shift_expression . RIGHT_SHIFT additive_expression
   45 relational_expression: relational_expression COM_LE shift_expression .

    RIGHT_SHIFT  shift, and go to state 63
    LEFT_SHIFT   shift, and go to state 64

    $default  reduce using rule 45 (relational_expression)


state 93

   40 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   41                 | shift_expression . RIGHT_SHIFT additive_expression
   46 relational_expression: relational_expression COM_GE shift_expression .

    RIGHT_SHIFT  shift, and go to state 63
    LEFT_SHIFT   shift, and go to state 64

    $default  reduce using rule 46 (relational_expression)


state 94

   40 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   41                 | shift_expression . RIGHT_SHIFT additive_expression
   43 relational_expression: relational_expression COM_L shift_expression .

    RIGHT_SHIFT  shift, and go to state 63
    LEFT_SHIFT   shift, and go to state 64

    $default  reduce using rule 43 (relational_expression)


state 95

   40 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   41                 | shift_expression . RIGHT_SHIFT additive_expression
   44 relational_expression: relational_expression COM_G shift_expression .

    RIGHT_SHIFT  shift, and go to state 63
    LEFT_SHIFT   shift, and go to state 64

    $default  reduce using rule 44 (relational_expression)


state 96

   43 relational_expression: relational_expression . COM_L shift_expression
   44                      | relational_expression . COM_G shift_expression
   45                      | relational_expression . COM_LE shift_expression
   46                      | relational_expression . COM_GE shift_expression
   48 equality_expression: equality_expression COM_EQ relational_expression .

    COM_LE  shift, and go to state 65
    COM_GE  shift, and go to state 66
    COM_L   shift, and go to state 67
    COM_G   shift, and go to state 68

    $default  reduce using rule 48 (equality_expression)


state 97

   43 relational_expression: relational_expression . COM_L shift_expression
   44                      | relational_expression . COM_G shift_expression
   45                      | relational_expression . COM_LE shift_expression
   46                      | relational_expression . COM_GE shift_expression
   49 equality_expression: equality_expression COM_NE relational_expression .

    COM_LE  shift, and go to state 65
    COM_GE  shift, and go to state 66
    COM_L   shift, and go to state 67
    COM_G   shift, and go to state 68

    $default  reduce using rule 49 (equality_expression)


state 98

   48 equality_expression: equality_expression . COM_EQ relational_expression
   49                    | equality_expression . COM_NE relational_expression
   51 and_expression: and_expression BIT_AND equality_expression .

    COM_EQ  shift, and go to state 69
    COM_NE  shift, and go to state 70

    $default  reduce using rule 51 (and_expression)


state 99

   51 and_expression: and_expression . BIT_AND equality_expression
   53 exclusive_or_expression: exclusive_or_expression BIT_XOR and_expression .

    BIT_AND  shift, and go to state 71

    $default  reduce using rule 53 (exclusive_or_expression)


state 100

   53 exclusive_or_expression: exclusive_or_expression . BIT_XOR and_expression
   55 inclusive_or_expression: inclusive_or_expression BIT_OR exclusive_or_expression .

    BIT_XOR  shift, and go to state 72

    $default  reduce using rule 55 (inclusive_or_expression)


state 101

   55 inclusive_or_expression: inclusive_or_expression . BIT_OR exclusive_or_expression
   57 logical_and_expression: logical_and_expression LOGIC_AND inclusive_or_expression .

    BIT_OR  shift, and go to state 73

    $default  reduce using rule 57 (logical_and_expression)


state 102

   57 logical_and_expression: logical_and_expression . LOGIC_AND inclusive_or_expression
   59 logical_or_expression: logical_or_expression LOGIC_OR logical_and_expression .

    LOGIC_AND  shift, and go to state 74

    $default  reduce using rule 59 (logical_or_expression)


state 103

   61 expression: identifier ASSIGN expression .

    $default  reduce using rule 61 (expression)


state 104

   17 argument_expression_list: argument_expression_list . COMMA expression
   25 postfix_expression: identifier LPAREN argument_expression_list . RPAREN

    COMMA   shift, and go to state 111
    RPAREN  shift, and go to state 112


state 105

   16 argument_expression_list: expression .

    $default  reduce using rule 16 (argument_expression_list)


state 106

   24 postfix_expression: identifier LBRACKET expression . RBRACKET

    RBRACKET  shift, and go to state 113


state 107

   14 func_decl_arguments: func_decl_arguments COMMA variable_declaration .

    $default  reduce using rule 14 (func_decl_arguments)


state 108

   74 compound_statement: LBRACE . RBRACE
   75                   | LBRACE . statement_list RBRACE
   76                   | LBRACE . declaration_list RBRACE
   77                   | LBRACE . declaration_list statement_list RBRACE

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    CHAR            shift, and go to state 1
    INT             shift, and go to state 2
    VOID            shift, and go to state 3
    IF              shift, and go to state 114
    FOR             shift, and go to state 115
    WHILE           shift, and go to state 116
    CONTINUE        shift, and go to state 117
    BREAK           shift, and go to state 118
    RETURN          shift, and go to state 119
    SEMICOLON       shift, and go to state 120
    LBRACE          shift, and go to state 108
    RBRACE          shift, and go to state 121
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    variable_declaration       go to state 122
    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    exclusive_or_expression    go to state 44
    inclusive_or_expression    go to state 45
    logical_and_expression     go to state 46
    logical_or_expression      go to state 47
    expression                 go to state 123
    type_specifier             go to state 52
    identifier                 go to state 49
    statement                  go to state 124
    compound_statement         go to state 125
    declaration_list           go to state 126
    statement_list             go to state 127
    expression_statement       go to state 128
    selection_statement        go to state 129
    iteration_statement        go to state 130
    jump_statement             go to state 131


state 109

   11 function_definition: type_specifier identifier LPAREN func_decl_arguments RPAREN compound_statement .

    $default  reduce using rule 11 (function_definition)


state 110

   10 function_declaration: EXTERN type_specifier identifier LPAREN func_decl_arguments RPAREN SEMICOLON .

    $default  reduce using rule 10 (function_declaration)


state 111

   17 argument_expression_list: argument_expression_list COMMA . expression

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    exclusive_or_expression    go to state 44
    inclusive_or_expression    go to state 45
    logical_and_expression     go to state 46
    logical_or_expression      go to state 47
    expression                 go to state 132
    identifier                 go to state 49


state 112

   25 postfix_expression: identifier LPAREN argument_expression_list RPAREN .

    $default  reduce using rule 25 (postfix_expression)


state 113

   24 postfix_expression: identifier LBRACKET expression RBRACKET .

    $default  reduce using rule 24 (postfix_expression)


state 114

   84 selection_statement: IF . LPAREN expression RPAREN statement
   85                    | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 133


state 115

   87 iteration_statement: FOR . LPAREN expression SEMICOLON expression SEMICOLON RPAREN statement
   88                    | FOR . LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement

    LPAREN  shift, and go to state 134


state 116

   86 iteration_statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 135


state 117

   89 jump_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 136


state 118

   90 jump_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 137


state 119

   91 jump_statement: RETURN . SEMICOLON
   92               | RETURN . expression SEMICOLON

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    SEMICOLON       shift, and go to state 138
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    exclusive_or_expression    go to state 44
    inclusive_or_expression    go to state 45
    logical_and_expression     go to state 46
    logical_or_expression      go to state 47
    expression                 go to state 139
    identifier                 go to state 49


state 120

   82 expression_statement: SEMICOLON .

    $default  reduce using rule 82 (expression_statement)


state 121

   74 compound_statement: LBRACE RBRACE .

    $default  reduce using rule 74 (compound_statement)


state 122

   78 declaration_list: variable_declaration . SEMICOLON

    SEMICOLON  shift, and go to state 140


state 123

   83 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 141


state 124

   80 statement_list: statement .

    $default  reduce using rule 80 (statement_list)


state 125

   69 statement: compound_statement .

    $default  reduce using rule 69 (statement)


state 126

   76 compound_statement: LBRACE declaration_list . RBRACE
   77                   | LBRACE declaration_list . statement_list RBRACE
   79 declaration_list: declaration_list . variable_declaration SEMICOLON

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    CHAR            shift, and go to state 1
    INT             shift, and go to state 2
    VOID            shift, and go to state 3
    IF              shift, and go to state 114
    FOR             shift, and go to state 115
    WHILE           shift, and go to state 116
    CONTINUE        shift, and go to state 117
    BREAK           shift, and go to state 118
    RETURN          shift, and go to state 119
    SEMICOLON       shift, and go to state 120
    LBRACE          shift, and go to state 108
    RBRACE          shift, and go to state 142
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    variable_declaration       go to state 143
    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    exclusive_or_expression    go to state 44
    inclusive_or_expression    go to state 45
    logical_and_expression     go to state 46
    logical_or_expression      go to state 47
    expression                 go to state 123
    type_specifier             go to state 52
    identifier                 go to state 49
    statement                  go to state 124
    compound_statement         go to state 125
    statement_list             go to state 144
    expression_statement       go to state 128
    selection_statement        go to state 129
    iteration_statement        go to state 130
    jump_statement             go to state 131


state 127

   75 compound_statement: LBRACE statement_list . RBRACE
   81 statement_list: statement_list . statement

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IF              shift, and go to state 114
    FOR             shift, and go to state 115
    WHILE           shift, and go to state 116
    CONTINUE        shift, and go to state 117
    BREAK           shift, and go to state 118
    RETURN          shift, and go to state 119
    SEMICOLON       shift, and go to state 120
    LBRACE          shift, and go to state 108
    RBRACE          shift, and go to state 145
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    exclusive_or_expression    go to state 44
    inclusive_or_expression    go to state 45
    logical_and_expression     go to state 46
    logical_or_expression      go to state 47
    expression                 go to state 123
    identifier                 go to state 49
    statement                  go to state 146
    compound_statement         go to state 125
    expression_statement       go to state 128
    selection_statement        go to state 129
    iteration_statement        go to state 130
    jump_statement             go to state 131


state 128

   70 statement: expression_statement .

    $default  reduce using rule 70 (statement)


state 129

   71 statement: selection_statement .

    $default  reduce using rule 71 (statement)


state 130

   72 statement: iteration_statement .

    $default  reduce using rule 72 (statement)


state 131

   73 statement: jump_statement .

    $default  reduce using rule 73 (statement)


state 132

   17 argument_expression_list: argument_expression_list COMMA expression .

    $default  reduce using rule 17 (argument_expression_list)


state 133

   84 selection_statement: IF LPAREN . expression RPAREN statement
   85                    | IF LPAREN . expression RPAREN statement ELSE statement

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    exclusive_or_expression    go to state 44
    inclusive_or_expression    go to state 45
    logical_and_expression     go to state 46
    logical_or_expression      go to state 47
    expression                 go to state 147
    identifier                 go to state 49


state 134

   87 iteration_statement: FOR LPAREN . expression SEMICOLON expression SEMICOLON RPAREN statement
   88                    | FOR LPAREN . expression SEMICOLON expression SEMICOLON expression RPAREN statement

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    exclusive_or_expression    go to state 44
    inclusive_or_expression    go to state 45
    logical_and_expression     go to state 46
    logical_or_expression      go to state 47
    expression                 go to state 148
    identifier                 go to state 49


state 135

   86 iteration_statement: WHILE LPAREN . expression RPAREN statement

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    exclusive_or_expression    go to state 44
    inclusive_or_expression    go to state 45
    logical_and_expression     go to state 46
    logical_or_expression      go to state 47
    expression                 go to state 149
    identifier                 go to state 49


state 136

   89 jump_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 89 (jump_statement)


state 137

   90 jump_statement: BREAK SEMICOLON .

    $default  reduce using rule 90 (jump_statement)


state 138

   91 jump_statement: RETURN SEMICOLON .

    $default  reduce using rule 91 (jump_statement)


state 139

   92 jump_statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 150


state 140

   78 declaration_list: variable_declaration SEMICOLON .

    $default  reduce using rule 78 (declaration_list)


state 141

   83 expression_statement: expression SEMICOLON .

    $default  reduce using rule 83 (expression_statement)


state 142

   76 compound_statement: LBRACE declaration_list RBRACE .

    $default  reduce using rule 76 (compound_statement)


state 143

   79 declaration_list: declaration_list variable_declaration . SEMICOLON

    SEMICOLON  shift, and go to state 151


state 144

   77 compound_statement: LBRACE declaration_list statement_list . RBRACE
   81 statement_list: statement_list . statement

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IF              shift, and go to state 114
    FOR             shift, and go to state 115
    WHILE           shift, and go to state 116
    CONTINUE        shift, and go to state 117
    BREAK           shift, and go to state 118
    RETURN          shift, and go to state 119
    SEMICOLON       shift, and go to state 120
    LBRACE          shift, and go to state 108
    RBRACE          shift, and go to state 152
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    exclusive_or_expression    go to state 44
    inclusive_or_expression    go to state 45
    logical_and_expression     go to state 46
    logical_or_expression      go to state 47
    expression                 go to state 123
    identifier                 go to state 49
    statement                  go to state 146
    compound_statement         go to state 125
    expression_statement       go to state 128
    selection_statement        go to state 129
    iteration_statement        go to state 130
    jump_statement             go to state 131


state 145

   75 compound_statement: LBRACE statement_list RBRACE .

    $default  reduce using rule 75 (compound_statement)


state 146

   81 statement_list: statement_list statement .

    $default  reduce using rule 81 (statement_list)


state 147

   84 selection_statement: IF LPAREN expression . RPAREN statement
   85                    | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 153


state 148

   87 iteration_statement: FOR LPAREN expression . SEMICOLON expression SEMICOLON RPAREN statement
   88                    | FOR LPAREN expression . SEMICOLON expression SEMICOLON expression RPAREN statement

    SEMICOLON  shift, and go to state 154


state 149

   86 iteration_statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 155


state 150

   92 jump_statement: RETURN expression SEMICOLON .

    $default  reduce using rule 92 (jump_statement)


state 151

   79 declaration_list: declaration_list variable_declaration SEMICOLON .

    $default  reduce using rule 79 (declaration_list)


state 152

   77 compound_statement: LBRACE declaration_list statement_list RBRACE .

    $default  reduce using rule 77 (compound_statement)


state 153

   84 selection_statement: IF LPAREN expression RPAREN . statement
   85                    | IF LPAREN expression RPAREN . statement ELSE statement

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IF              shift, and go to state 114
    FOR             shift, and go to state 115
    WHILE           shift, and go to state 116
    CONTINUE        shift, and go to state 117
    BREAK           shift, and go to state 118
    RETURN          shift, and go to state 119
    SEMICOLON       shift, and go to state 120
    LBRACE          shift, and go to state 108
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    exclusive_or_expression    go to state 44
    inclusive_or_expression    go to state 45
    logical_and_expression     go to state 46
    logical_or_expression      go to state 47
    expression                 go to state 123
    identifier                 go to state 49
    statement                  go to state 156
    compound_statement         go to state 125
    expression_statement       go to state 128
    selection_statement        go to state 129
    iteration_statement        go to state 130
    jump_statement             go to state 131


state 154

   87 iteration_statement: FOR LPAREN expression SEMICOLON . expression SEMICOLON RPAREN statement
   88                    | FOR LPAREN expression SEMICOLON . expression SEMICOLON expression RPAREN statement

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    exclusive_or_expression    go to state 44
    inclusive_or_expression    go to state 45
    logical_and_expression     go to state 46
    logical_or_expression      go to state 47
    expression                 go to state 157
    identifier                 go to state 49


state 155

   86 iteration_statement: WHILE LPAREN expression RPAREN . statement

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IF              shift, and go to state 114
    FOR             shift, and go to state 115
    WHILE           shift, and go to state 116
    CONTINUE        shift, and go to state 117
    BREAK           shift, and go to state 118
    RETURN          shift, and go to state 119
    SEMICOLON       shift, and go to state 120
    LBRACE          shift, and go to state 108
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    exclusive_or_expression    go to state 44
    inclusive_or_expression    go to state 45
    logical_and_expression     go to state 46
    logical_or_expression      go to state 47
    expression                 go to state 123
    identifier                 go to state 49
    statement                  go to state 158
    compound_statement         go to state 125
    expression_statement       go to state 128
    selection_statement        go to state 129
    iteration_statement        go to state 130
    jump_statement             go to state 131


state 156

   84 selection_statement: IF LPAREN expression RPAREN statement .
   85                    | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 159

    $default  reduce using rule 84 (selection_statement)


state 157

   87 iteration_statement: FOR LPAREN expression SEMICOLON expression . SEMICOLON RPAREN statement
   88                    | FOR LPAREN expression SEMICOLON expression . SEMICOLON expression RPAREN statement

    SEMICOLON  shift, and go to state 160


state 158

   86 iteration_statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 86 (iteration_statement)


state 159

   85 selection_statement: IF LPAREN expression RPAREN statement ELSE . statement

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IF              shift, and go to state 114
    FOR             shift, and go to state 115
    WHILE           shift, and go to state 116
    CONTINUE        shift, and go to state 117
    BREAK           shift, and go to state 118
    RETURN          shift, and go to state 119
    SEMICOLON       shift, and go to state 120
    LBRACE          shift, and go to state 108
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    exclusive_or_expression    go to state 44
    inclusive_or_expression    go to state 45
    logical_and_expression     go to state 46
    logical_or_expression      go to state 47
    expression                 go to state 123
    identifier                 go to state 49
    statement                  go to state 161
    compound_statement         go to state 125
    expression_statement       go to state 128
    selection_statement        go to state 129
    iteration_statement        go to state 130
    jump_statement             go to state 131


state 160

   87 iteration_statement: FOR LPAREN expression SEMICOLON expression SEMICOLON . RPAREN statement
   88                    | FOR LPAREN expression SEMICOLON expression SEMICOLON . expression RPAREN statement

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    LPAREN          shift, and go to state 29
    RPAREN          shift, and go to state 162
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    exclusive_or_expression    go to state 44
    inclusive_or_expression    go to state 45
    logical_and_expression     go to state 46
    logical_or_expression      go to state 47
    expression                 go to state 163
    identifier                 go to state 49


state 161

   85 selection_statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 85 (selection_statement)


state 162

   87 iteration_statement: FOR LPAREN expression SEMICOLON expression SEMICOLON RPAREN . statement

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IF              shift, and go to state 114
    FOR             shift, and go to state 115
    WHILE           shift, and go to state 116
    CONTINUE        shift, and go to state 117
    BREAK           shift, and go to state 118
    RETURN          shift, and go to state 119
    SEMICOLON       shift, and go to state 120
    LBRACE          shift, and go to state 108
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    exclusive_or_expression    go to state 44
    inclusive_or_expression    go to state 45
    logical_and_expression     go to state 46
    logical_or_expression      go to state 47
    expression                 go to state 123
    identifier                 go to state 49
    statement                  go to state 164
    compound_statement         go to state 125
    expression_statement       go to state 128
    selection_statement        go to state 129
    iteration_statement        go to state 130
    jump_statement             go to state 131


state 163

   88 iteration_statement: FOR LPAREN expression SEMICOLON expression SEMICOLON expression . RPAREN statement

    RPAREN  shift, and go to state 165


state 164

   87 iteration_statement: FOR LPAREN expression SEMICOLON expression SEMICOLON RPAREN statement .

    $default  reduce using rule 87 (iteration_statement)


state 165

   88 iteration_statement: FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN . statement

    IDENTIFIER      shift, and go to state 19
    CONSTANT        shift, and go to state 26
    CHAR_CONSTANT   shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IF              shift, and go to state 114
    FOR             shift, and go to state 115
    WHILE           shift, and go to state 116
    CONTINUE        shift, and go to state 117
    BREAK           shift, and go to state 118
    RETURN          shift, and go to state 119
    SEMICOLON       shift, and go to state 120
    LBRACE          shift, and go to state 108
    LPAREN          shift, and go to state 29
    BIT_NOT         shift, and go to state 30
    BIT_INVERSION   shift, and go to state 31
    MINUS           shift, and go to state 32
    PLUS            shift, and go to state 33

    primary_expression         go to state 34
    postfix_expression         go to state 35
    unary_expression           go to state 36
    unary_operator             go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    exclusive_or_expression    go to state 44
    inclusive_or_expression    go to state 45
    logical_and_expression     go to state 46
    logical_or_expression      go to state 47
    expression                 go to state 123
    identifier                 go to state 49
    statement                  go to state 166
    compound_statement         go to state 125
    expression_statement       go to state 128
    selection_statement        go to state 129
    iteration_statement        go to state 130
    jump_statement             go to state 131


state 166

   88 iteration_statement: FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .

    $default  reduce using rule 88 (iteration_statement)
